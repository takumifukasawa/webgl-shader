{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "_develop/js/controller/CanvasController.js",
    "_develop/js/entry/index.js",
    "_develop/js/model/Plane.js",
    "_develop/js/model/Shader.js",
    "_develop/js/view/CanvasViewer.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import CanvasViewer from './../view/CanvasViewer.js';\nimport Plane from './../model/Plane.js';\nimport Shader from './../model/Shader.js';\n\nconst CANVAS_WIDTH = 600;\nconst CANVAS_HEIGHT = 400;\n\nclass CanvasController {\n  constructor(opts = {}) {\n    this.update = this.update.bind(this);\n    this.lastTimeStamp = performance.now();\n\n    this.initialize();\n    this.start();\n  }\n\n  initialize() {\n    CanvasViewer.makeCanvas('.wrapper', 'my-canvas', CANVAS_WIDTH, CANVAS_HEIGHT);\n    \n    const normalShader = new Shader({\n      vertexShader: document.getElementById('v-shader').textContent,\n      fragmentShader: document.getElementById('f-shader').textContent\n    });\n\n    this.plane = new Plane({\n      width: CANVAS_WIDTH, height: CANVAS_HEIGHT,\n      uniforms: {\n        time: {\n          type: 'f',\n          value: 0.0\n        },\n        resolution: {\n          type: 'v2',\n          value: new THREE.Vector2(CANVAS_WIDTH, CANVAS_HEIGHT)\n        }\n      },\n      vertexShader: normalShader.vertexShader,\n      fragmentShader: normalShader.fragmentShader\n    });\n\n    CanvasViewer.addObject(this.plane.meshObject);\n  }\n\n  start() {\n    this.update();\n  }\n  stop() {\n    cancelAnimationFrame(this.requestID);\n  }\n  setClock(clock) {\n    this.clock = clock;\n  }\n\n  update(timeStamp) {\n    const deltaTime = timeStamp - this.lastTimeStamp; \n    \n    this.requestID = requestAnimationFrame(this.update);\n    this.plane.update(timeStamp, deltaTime);\n    CanvasViewer.update();\n  }\n}\n\nexport default new CanvasController();\n",
    "import CanvasController from './../controller/CanvasController.js';\n\nclass Main {\n  constructor(opts = {}) {\n  }\n}\nnew Main();\n",
    "export default class Plane {\n  constructor(opts = {}) {\n    this.width = opts.width || null;\n    this.height = opts.height || null;\n  \n    this.geometry = new THREE.PlaneGeometry(this.width, this.height);\n    this.material = new THREE.ShaderMaterial({\n      uniforms: opts.uniforms || {},\n      vertexShader: opts.vertexShader || '',\n      fragmentShader: opts.fragmentShader || ''\n    });\n    \n    this._mesh = new THREE.Mesh(this.geometry, this.material);\n  }\n\n  get meshObject() {\n    return this._mesh;\n  }\n\n  update(timeStamp, deltaTime) {\n    this.material.uniforms.time.value = timeStamp / 1000;\n  }\n\n  clone() {\n    return new THREE.Mesh(this.geometry, this.material);\n  }\n}\n",
    "export default class Shader {\n  constructor(opts = {}) {\n    this._vertexShader = opts.vertexShader || null;\n    this._fragmentShader = opts.fragmentShader || null;\n  }\n  get vertexShader() {\n    return this._vertexShader;\n  }\n  get fragmentShader() {\n    return this._fragmentShader;\n  }\n}\n",
    "class CanvasViewer {\n  constructor() {}\n\n  makeCanvas(root, classSelector, width, height) {\n    this.width = width;\n    this.height = height;\n    \n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.domElement.classList.add(classSelector);\n    this.renderer.setSize(this.width, this.height);\n\n    this.scene = new THREE.Scene();\n    \n    this.camera = new THREE.OrthographicCamera(this.width/-2, this.width/2, this.height/2, this.height/-2, 1, 1000);\n    this.camera.position.z = 1;\n    this.scene.add(this.camera);\n\n    this.root = document.querySelector(root);\n    this.root.appendChild(this.renderer.domElement);\n  }\n\n  addObject(obj) {\n    this.scene.add(obj);\n  }\n\n  update() {\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default new CanvasViewer();\n"
  ]
}